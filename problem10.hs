import Control.Monad (guard)
import Data.List (nub, sort)


astroidPositionsInLine :: String -> [Int]
astroidPositionsInLine line = do
  (x, c) <- zip [0..] line
  guard (c == '#')
  pure x

astroidPositions :: [String] -> [(Int, Int)]
astroidPositions astrMap =
  concat $ zipWith (\y line -> ((,) y) <$> astroidPositionsInLine line) [0..] astrMap

vectorBetween :: (Int, Int) -> (Int, Int) -> (Int, Int)
vectorBetween (x0, y0) (x1, y1) = (x1-x0, y1-y0)

toLowestTerms :: (Int, Int) -> (Int, Int)
toLowestTerms (x, y) = (x `div` d, y `div` d)
  where d = gcd x y

visibleFrom :: (Int, Int) -> [(Int, Int)] -> Int
visibleFrom p qs = length $ nub $ toLowestTerms <$> vectorBetween p <$> (filter (/= p) qs)

main :: IO ()
main = print $ maximum $ (\p -> visibleFrom p astroids) <$> astroids
  where
    astroids = astroidPositions input


input :: [String]
input =
  [ "#.#.##..#.###...##.#....##....###"
  , "...#..#.#.##.....#..##.#...###..#"
  , "####...#..#.##...#.##..####..#.#."
  , "..#.#..#...#..####.##....#..####."
  , "....##...#.##...#.#.#...#.#..##.."
  , ".#....#.##.#.##......#..#..#..#.."
  , ".#.......#.....#.....#...###....."
  , "#.#.#.##..#.#...###.#.###....#..#"
  , "#.#..........##..###.......#...##"
  , "#.#.........##...##.#.##..####..#"
  , "###.#..#####...#..#.#...#..#.#..."
  , ".##.#.##.........####.#.#...##..."
  , "..##...#..###.....#.#...#.#..#.##"
  , ".#...#.....#....##...##...###...#"
  , "###...#..#....#............#....."
  , ".#####.#......#.......#.#.##..#.#"
  , "#.#......#.#.#.#.......##..##..##"
  , ".#.##...##..#..##...##...##.....#"
  , "#.#...#.#.#.#.#..#...#...##...#.#"
  , "##.#..#....#..##.#.#....#.##...##"
  , "...###.#.#.......#.#..#..#...#.##"
  , ".....##......#.....#..###.....##."
  , "........##..#.#........##.......#"
  , "#.##.##...##..###.#....#....###.#"
  , "..##.##....##.#..#.##..#.....#..."
  , ".#.#....##..###.#...##.#.#.#..#.."
  , "..#..##.##.#.##....#...#........."
  , "#...#.#.#....#.......#.#...#..#.#"
  , "...###.##.#...#..#...##...##....#"
  , "...#..#.#.#..#####...#.#...####.#"
  , "##.#...#..##..#..###.#..........#"
  , "..........#..##..#..###...#..#..."
  , ".#.##...#....##.....#.#...##...##"
  ]

