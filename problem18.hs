
import Control.Monad

type Grid = [[Char]]




newtype Pos = Pos {unPos :: (Int, Int)} deriving (Eq, Show)
newtype Step = Step {unStep :: (Int, Int)} deriving (Eq, Show)

data State = State
  { pos :: Pos
  , keys :: []
  } deriving (Show)


findBot :: Grid -> [Pos]
findBot grid = do
  y <- [1 .. (length grid - 2)]
  x <- [1 .. (length (head grid) - 2)]
  guard $ look grid (Pos (x,y)) == Just '@'
  pure $ Pos (x, y)

look :: Grid -> Pos -> Maybe Char
look grid (Pos (x,y))
  | y >= length grid = Nothing
  | y < 0 = Nothing
  | x >= length (head grid) = Nothing
  | x < 0 = Nothing
  | otherwise = Just $ grid !! y !! x

updatePos :: Pos -> Step -> Pos
updatePos (Pos (x,y)) (Step (dx, dy)) = Pos (x+dx, y+dy)


input :: Grid
input =
  [ "#################################################################################"
  , "#.......#...#...#...........#.....#...#.#.....#m......#.......#.....#........u..#"
  , "#####.#.#.#.#.#.###.#######.###.#.#.#.#.#.###.###.#####.#.###.###.#.###########.#"
  , "#.....#...#...#.....#.#.....#...#...#...#.#....e#.......#...#.....#.....#.......#"
  , "#.###################.#.#####.#########.#.#####.###########.###########.#.#######"
  , "#.#...#...#...........#.#.....#.......#.#.....#.....#.....#...#.......#.#.#.....#"
  , "#.#S#.###.#.#####.#####.#.###.#.###.###.#####.#####.#.###.###.#.#.#####.#.#.###.#"
  , "#.#.#...#.#...#.#.......#.#.#.#.#...#...#.D.#.#...#...#.#.#...#.#.#.....#j..#...#"
  , "#.#.###.#.###.#.#########.#.#.###.###.###.#.#.#.#.#####.#.#.###.###.#########.###"
  , "#.#...#.#...#...#.#.........#...#.#...#.#.#...#.#.....#...#...#...#.#.#.....#...#"
  , "#.###.#.###.###.#.#.#########.#.#.#.###.#.#####.#####.#.#####.###.#.#.#.#.#.###.#"
  , "#...#.#c..#.....#.......#...#.#.#.#.#...#...#.....#.#.#.#.....#...#.#...#.#...#.#"
  , "#.###.###.#.#############.#.###.#.#.#.#.###.#####.#.#.#.#.#####.###.#.###.###.#.#"
  , "#.#...#.#.#.........#.....#...#.#.....#.#.#...#.#...#.#...#...#.....#.#...#...K.#"
  , "#.#.###.#.#########.#.#######.#.#########.###.#.###.#.#####.#.#.#######.#########"
  , "#.......#.#.......#h..#.....#.#.........#...#.#.....#.......#...#.....#.#...#...#"
  , "#.#######.#O#####.#######.#.#.#.#######.###.#.#.#######.#######.#.###F#.#.#.#.#.#"
  , "#.#....y..#...#...#.....#.#.#.#.#.#.....#...#.#.#.....#.#.....#...#.#.#...#.#.#.#"
  , "###.#####.###.#.###.###.#.###.#.#.#.###.#.#.#.###.###.#.#.###.#####.#.#.###.#.#.#"
  , "#...#.....#.#.#...#.#.Z.#...#.#.#.#.#...#.#.#.....#.#.#.#.#.#...#.....#...#...#.#"
  , "#.###.#####.#.###A#.#.###.#.#.#.#.#.#####.#########.#.#.#.#.###.#.#########.###.#"
  , "#.#.#.#.....#.#.#...#.#...#...#...#.....#.#.........#.#.#.#.#...#.#.......#.#...#"
  , "#.#.#.#####.#.#.#######.#########.#####.#.#.#####.#.#.#.#.#.#####.#.###.#.###.#.#"
  , "#.#.#...#...#.#...#.....#.....#.......#.#.#.#.#...#.#.#.#.#.....#.#.#...#.....#.#"
  , "#.#.###.#.#.#.###.#.#######.#.#####.###.#.#.#.#.#####.#.#.#.#.###.###.#########X#"
  , "#.#...#...#.#...#.#...#.....#.....#.#...#.....#.#...#.#.#.#.#...#...#.....#.....#"
  , "#.#W#.#####.###N#.###.#.#.#######.###.#.#######.#.#.#.###.#.###.###.#####.###.###"
  , "#i#.#.....#.#.#.#...#.#.#.#.....#.....#.#..r..#...#.#...#.#.#.....#.#...#...#.#.#"
  , "#.#######.#.#.#.#.###.###.#.###########.#.###.#.###.###.#.###.#####.#.#.###.#.#.#"
  , "#.......#...#.#.#...#...#.#.............#.#.#.#.#.#...#...#...#.....#.#.....#.#.#"
  , "#.#####.#.###.#.#.#.###.#.#.#############.#.#.#.#.###.#####.###.#####.#######.#.#"
  , "#.#.#...#.....#.#.#...#..t#...#.#.......#.#.#.#...#.....#.....#...#...#.....#.#.#"
  , "#.#.#.#######.#.#.###.#######.#.#.#.#####.#.#.#.###.###.#####.###.###.#.###.#.#.#"
  , "#...#.#...#...#.#...#.....#.#.#...#.....#.#.#.#.#...#.........#.#...#...T.#.#...#"
  , "###.#.#.#.#.###.###.#.###.#.#.#########.#.#.#.###.###########.#.###.#####.#.###.#"
  , "#...#...#.#.#...#...#...#...#.......#...#.#.#...#.#.....#...#...#...#...#.#...#.#"
  , "#.#######.###.###.#####.###########.#.###.#.###.#.#.###.#.#.###.#.###.#.#####.###"
  , "#.#...#v#...#.#.#.....#.........#...#...#.#.......#...#..l#...#.#.....#.....#.P.#"
  , "#.#.#.#.###.#.#.#####.#########.#.#####.#.###########.#######.#############.###.#"
  , "#...#.....#...#...............#.............................#....b..............#"
  , "#######################################.@.#######################################"
  , "#...#.#.........#.....#...........#...........#...#.....#.......#...#.....Q.#...#"
  , "#.#.#.#.#####.###.#.#.#.#####.###.#.###.#.###.#.#.#.###.#.#####.#.#.#.#.###.###.#"
  , "#.#.#.#.#...#.....#.#.#.#.#...#...#...#.#.#.....#.#...#...#.....#.#.#.#...#.#...#"
  , "#.#.#.#.#.#.#######.###.#.#.#####.###.#.#.#######.###.#####.#####.#.#.###.#.#.#.#"
  , "#.#...#.#.#.....#.#.#.B...#.....#.#...#.#.....#.....#.#...#.......#.#.#...#...#.#"
  , "#.#####.#.#####.#.#.#.#######.#.###.###.#.###.###.###.#.#####.#####.#.#.#######.#"
  , "#.#...#q#..f#.....#...#.....#.#...#.#...#.#.#...#.#.....#...#.#...#...#.#.....#.#"
  , "#.#.#.#.#.#.#######.###.###.###.#.#.#.###.#.###.###.#####.#.#.###.#####.#.###.#.#"
  , "#...#.#.#.#...#...#p..#.#.#...#.#...#...#.....#...#.#.....#.#.....#...#...#...#.#"
  , "#####.#.#####.#.#.###.#.#.###.#########.#####.###.#.#.#####.#####.###.#####.###.#"
  , "#.....#.......#.#.#...#.#...#.#.......#.#...#.#.#...#.#...#.....#.....#.#...#.#.#"
  , "#.###########.#.#.#####.###.#L#.#####R#.#.#.#.#.#####.#.#.#####.#####.#.#.###.#.#"
  , "#...........#.#.#.......#...#...#...#...#.#.#.....#...#.#.....#...#...#.#...#...#"
  , "#######.###.#.#.#########.#.#####.#.#######.#####.#.#######.#.###.#.###.###.###.#"
  , "#.......#...#.#.#.........#.......#.....#...#.....#.#.....#.#...#.#...#...#...#.#"
  , "#.#######.###.#.#.###.#################.#.###.#####.#.#.#.###.###.###.###.###.#.#"
  , "#.#.........#.#.#...#.............#.....#.........#.#.#.#.....#...#.#.......#.#.#"
  , "#.###.#######.#.###########.#####.#.###############.###.#####.#.###.#.#####.#.###"
  , "#...#.#.......#.#.........#.#...#.#.#...#.......#...#...#.#...#.#.....#...#.#...#"
  , "#.#G###.#######.#.#######.#.###.#.###.#.#.#####.#.###.###.#.###.#######.#.#####.#"
  , "#.#...#....x#.#.#.#z#.....#.....#.....#.#.....#...#...#...#.#...#.......#.#...#.#"
  , "#.###.#####.#.#.#.#.#########.#########.#####.#######.#.###.#####.#######.#.#.#.#"
  , "#k#.#.....#...#...#.#.....#...#.......#.#...#.#.......#.#...#.....#.#...#...#.#.#"
  , "#.#.#####.###.#####.#.###.#.###.#####.#.#.#.#.#.#.#####.#.###.#####.#.#.#####.#H#"
  , "#.#.....#...#.....#.#...#.#.#...#...#...#.#...#.#.#.....#.#...#...#...#...#.#.#.#"
  , "#.#.###.###.#####.#.###.#.#.#.###.#.###.#.#######.#.###.#.#.###.#.#.###.#Y#.#.#.#"
  , "#...#...#.#...#...#.....#..o#.#.#.#.....#.#.......#.#...#...#...#...#...#...#..g#"
  , "#####.###.#.###.#######.#####.#.#.#######.#####.###.###.#############.#####.###.#"
  , "#...#.#...#.....#.....#.....#.#.#...#...#.......#.....#...#...........#.#...#...#"
  , "#.#.#.###.#######.###.#######.#.###.#.###########.###.###.#.###########.#.###.###"
  , "#.#.#.#.....#.#.....#.#.......#...#.#...#...#...#...#.#...#.......#...#.I.#.#...#"
  , "#.#.#.#.###.#.#.###.#.#.#######.#.#.###.#.###.#.#.###.#.#########.###.#.###.###.#"
  , "#.#.#.#.#...#s....#.#.#.......#a#.#.....#.#...#.#.#...#.....#.....#...#.....#.#.#"
  , "#.###M#U###.#####.#.#.###.###.###.#####.#.#.###.#.#.#.#####.#.#####.#V#####.#.#.#"
  , "#.....#...#...#...#.#...#...#.#...#....n#.#...#d..#.#.#.J.#...#.....#...#..w#.#.#"
  , "#.#######.###.#####.###.#####.#.###.#####.###.#####.#.#.#.###.#####.#####.###.#.#"
  , "#.......#.#.#...#...#.#.....#.#...#.#...#...#.#.#...#.#.#.#...#...#...........#.#"
  , "#######.#.#.###E#.###.#####.#.#.#.#.###.#.###.#.#.#####.#.#####.#.#############.#"
  , "#.........#.......#.........C.#.#.......#.......#.......#.......#...............#"
  , "#################################################################################"
  ]
